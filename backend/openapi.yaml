openapi: 3.0.0
info:
  title: Example API
  version: 1.0.0
servers:
  - url: http://localhost:3000/api
paths:
  /users:
    get:
      summary: Get all users
      operationId: getUsers
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
  /users/{user_id}:
    get:
      summary: Get a specific user
      operationId: getUserById
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
  /products:
    get:
      summary: Get all products
      operationId: getProducts
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
    post:
      summary: Create a new product
      operationId: createProduct
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductInput"
      responses:
        "201":
          description: Product created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
  /products/{product_id}:
    get:
      summary: Get a specific product
      operationId: getProductById
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
    put:
      summary: Update a product
      operationId: updateProduct
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductInput"
      responses:
        "200":
          description: Product updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
    delete:
      summary: Delete a product
      operationId: deleteProduct
      parameters:
        - name: product_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Product deleted
components:
  schemas:
    User:
      type: object
      properties:
        uid:
          type: string
        name:
          type: string
        email:
          type: string
        age:
          type: integer
        created_at:
          type: string
          format: date-time
        bio:
          type: string
          nullable: true
    Product:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        price:
          type: number
          format: float
        in_stock:
          type: boolean
        created_at:
          type: string
          format: date-time
        description:
          type: string
          nullable: true
    ProductInput:
      type: object
      properties:
        title:
          type: string
        price:
          type: number
          format: float
        in_stock:
          type: boolean
        description:
          type: string
          nullable: true
